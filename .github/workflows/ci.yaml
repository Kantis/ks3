name: build

on:
   pull_request:

   push:
      paths-ignore:
         - "doc/**"
         - "documentation/**"
         - "*.yml"
      branches:
         - "main"
         - "release/*"
      tags:
         - "v**"

   workflow_dispatch:

   release:
      types: [ published ]


concurrency:
   group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
   cancel-in-progress: true


jobs:

   linux-tests:
      name: "./gradlew ${{ matrix.target }} @ ${{ matrix.os }}"
      strategy:
         matrix:
            os: [ ubuntu-latest ]
            target:
               - jvmTest
               - jsTest
               - linuxX64Test
               # - jsLegacyBrowserTest
               # - jsLegacyNodeTest
               # - jsLegacyTest
               # - jsIrBrowserTest
               # - jsIrNodeTest
      uses: ./.github/workflows/gradle_task.yml
      with:
         runs-on: ${{ matrix.os }}
         gradle-task: ${{ matrix.target }} --stacktrace


   macos-tests:
      name: "./gradlew ${{ matrix.target }} @ ${{ matrix.os }}"
      strategy:
         matrix:
            os: [ macos-latest ]
            target:
               - apiCheck -Pks3_enableKotlinNative=true -Pks3_enableKotlinJs=true -DenableKlibValidation
               - iosSimulatorArm64Test
               - iosX64Test
               - macosArm64Test
               - macosX64Test
               - tvosSimulatorArm64Test
               - tvosX64Test
               - watchosSimulatorArm64Test
               - watchosX64Test
      uses: ./.github/workflows/gradle_task.yml
      with:
         runs-on: ${{ matrix.os }}
         gradle-task: ${{ matrix.target }} --stacktrace


   windows-tests:
      name: "./gradlew ${{ matrix.target }} @ ${{ matrix.os }}"
      strategy:
         matrix:
            os: [ windows-latest ]
            target:
               - mingwX64Test
      uses: ./.github/workflows/gradle_task.yml
      with:
         runs-on: ${{ matrix.os }}
         gradle-task: ${{ matrix.target }} --stacktrace


   gradle-check:
      name: "./gradlew check @ ${{ matrix.os }}"
      needs: [ linux-tests, macos-tests, windows-tests ]
      # Run 'check' task for each OS.
      # To improve speed, only enable Kotlin/JVM (Kotlin/Native is particularly slow).
      # The other targets are tested individually above.
      strategy:
         matrix:
            os: [ ubuntu-latest, macos-latest, windows-latest ]
      uses: ./.github/workflows/gradle_task.yml
      with:
         runs-on: ${{ matrix.os }}
         gradle-task: check --stacktrace -Pks3_enableKotlinNative=false -Pks3_enableKotlinJs=false


   docs:
      runs-on: ubuntu-latest
      steps:
         -  name: "Checkout code"
            uses: actions/checkout@v4
            with:
               fetch-depth: 1 # Checkout the code. No need of tags and whole history.

         -  name: Setup JDK
            uses: actions/setup-java@v4
            with:
               distribution: 'temurin'
               java-version: '11'

         -  name: Setup Gradle
            uses: gradle/gradle-build-action@v3

         -  name: Build docs
            run: ./gradlew dokkatooGeneratePublicationHtml --no-configuration-cache --no-build-cache --rerun-tasks

         -  name: Deploy docs
            uses: peaceiris/actions-gh-pages@v4
            if: github.ref == 'refs/heads/main'
            with:
               github_token: ${{ secrets.GITHUB_TOKEN }}
               publish_dir: ./build/dokka/html/

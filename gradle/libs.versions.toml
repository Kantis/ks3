[versions]
dokka = "1.7.20"

kotlin = "1.8.10"
kotlinx-serialization = "1.5.0"

kotest = "5.5.4"
kotest-propertyArbsExtension = "2.1.2"
kotest-springExtension = "1.1.2"
kotest-wiremockExtension = "1.0.3"

okio = "3.2.0"

gradlePlugin-testlogger = "3.2.0"


[libraries]

## KotlinX Serialization ##
kotlinxSerialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinxSerialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "kotlinx-serialization" }
kotlinxSerialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "kotlinx-serialization" }
kotlinxSerialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinxSerialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "kotlinx-serialization" }
kotlinxSerialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }
kotlinxSerialization-jsonOkio = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-okio", version.ref = "kotlinx-serialization" }


## Kotest ##
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertionsJson = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-frameworkApi = { module = "io.kotest:kotest-framework-api", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" } # Not included in the BOM
kotest-frameworkDatatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-runnerJunit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

kotest-propertyArbsExtension = { module = "io.kotest.extensions:kotest-property-arbs", version.ref = "kotest-propertyArbsExtension" }
kotest-springExtension = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-springExtension" }
kotest-wiremockExtension = { module = "io.kotest.extensions:kotest-extensions-wiremock", version.ref = "kotest-wiremockExtension" }

kotestPlugin-embeddedCompiler = { module = "io.kotest:kotest-framework-multiplatform-plugin-embeddable-compiler" }
kotestPlugin-multiplatform = { module = "io.kotest:kotest-framework-multiplatform-plugin-gradle" }


## Okio ##
okio-core = { module = "com.squareup.okio:okio", version.ref = "okio" }


### Gradle plugins ###
# Maven coordinates of Gradle plugins. Used in ./build-logic/build.gradle.kts.
gradlePlugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugin-kotlinAllOpen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
gradlePlugin-kotlinNoArg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
gradlePlugin-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

gradlePlugin-testlogger = { module = "com.adarshr:gradle-test-logger-plugin", version.ref = "gradlePlugin-testlogger" }

gradlePlugin-kotest = { module = "io.kotest:kotest-framework-multiplatform-plugin-gradle", version.ref = "kotest" }

gradlePlugin-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

[bundles]


[plugins]
kotlinBinaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.13.0" }

# If plugin will be used by conventions, define plugins in ./build-logic/build.gradle.kts to avoid error:
# The Kotlin Gradle plugin was loaded multiple times in different subprojects, which is not supported and may break the build.
